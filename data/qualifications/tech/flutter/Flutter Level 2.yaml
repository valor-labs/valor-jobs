title: Flutter
category: Tech
status: Input required
level: 2
knowledge:
  - 'Experience with OOP and OOD: understanding of proper abstractions and program scalability & suppleness techniques, high cohesion / loose coupling'
  - Reactive Programming Basics
  - 'Understanding of Dart execution model: event loops, microtasks, futures, zones'
  - 'Understanding of Dart memory model: heap, isolated memory'
  - 'Understanding of Flutter  Dart runtime: Dart VM, Dart as native executable, Dart as a backend app (node), Flutter on Android  iOS  web  linux  macOS  windows'
  - Understanding of Dart typing and OO model
  - Deep experience with Streams
  - Experience with asynchronous code testing
  - Experience with named navigation system and Navigator 2.0
  - 'Understanding of Flutter''s rendering system: widgets, elements, render objects'
  - Understanding of efficient UI code reuse techniques
  - 'Experience with state management: general understanding and experience with state management, team uses something close to BLoC primarily'
  - Understanding of keys and Flutter tree updating algorithm
  - Experience with Flutter web
  - Experience with plugins development
  - Experience with implicit and Hero animations
  - Experience with TDD & flutter:test
  - Understanding of Android  iOS  web platforms
  - 'Experience with third-party tools: Provider, RxDart, BLoC'
  - Experience with BaaS Platforms
  - Experience with GitFlow
  - Skills to setup a basic CI pipeline to analyze, test and assemble the build
  - Good understanding of RESTful APIs
  - Experience with websockets would be a plus
  - 'SQLite: Transactions, Joins, relations between tables, versioning'
materials_and_topics: []
dependency: null
